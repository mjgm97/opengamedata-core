name: Aqualab BigQuery Test
on:
  workflow_dispatch:
    inputs:
      game:
        description: "Game name"
        required: true
        default: "AQUA"
jobs:
  test_connect:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        game: ${{ FromJson(github.event.inputs.game) }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Cloud SDK
      if: github.event.inputs.game == 'AQUALAB'
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Get correct Python
      run: |
        sudo apt-get -q install python3.8
        sudo apt-get -q install python3.8-dev
    - name: Do export
      if: github.event.inputs.game == 'AQUALAB'
      uses: ./.github/actions/export_aqualab
      with:
        game: "AQUALAB"
        db: ${{secrets.AQUALAB_DB_NAME}}
    - name: Upload zips as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./data/AQUALAB/*.zip
    #- name: Get OpenConnect
    #  run: sudo add-apt-repository ppa:phusen/openconnect && sudo apt-get -q update && sudo apt-get -q install openconnect
    #- name: Connect VPN
    #  run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    #- name: Upload files to opengamedata via scp
    #  run: |
    #    mkdir -p ~/.ssh
    #    echo '${{secrets.FILE_DEPLOY_KEY}}' >> ./key.txt
    #    chmod 600 ./key.txt
    #    scp -o StrictHostKeyChecking=no -i ./key.txt ./data/AQUALAB/* ${{ secrets.VPN_USER }}@${{ secrets.FILE_HOST }}:/var/www/opengamedata/data/AQUALAB/
